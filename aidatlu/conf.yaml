internal_trigger:
#Generate TLU internal trigger with given rate in Hz
  internal_trigger_rate: 0

dut_module:
  dut_1:  #aida DUT 
    mode: 'aida' # 'aida', 'aidatrig', 'eudet', 'any'
  dut_2:  #BDAQ MOCK
    mode: 'off'   # 'aida', 'aidatrig', 'eudet', 'any'
  dut_3:  #DATURA TELESCOPE
    mode: 'off'   # 'aida', 'aidatrig', 'eudet', 'any'
  dut_4:  #FEI4
    mode: 'off'   # 'aida', 'aidatrig', 'eudet', 'any'    

trigger_inputs:
  #threshold voltages for the trigger inputs in V.
  threshold:
    threshold_1: -0.06
    threshold_2: -0.06
    threshold_3: -0.06
    threshold_4: -0.06
    threshold_5: -0.06
    threshold_6: -0.06

  trigger_inputs_logic:
  #Enable Trigger logic. A 1 in a trigger input means the trigger has to be HIGH,
  #a 0 corresponds to a VETO and a -1 to DO NOT CARE.
  #The elements in words e.q trig_1 and trig_2 have a AND between them. 
  #Different words e.q. trigger_logic_1 and trigger_logic_2 have OR between them.
  #So element-wise AND and dictionary-wise OR.
  #TODO The signal length of the trigger inputs should be analyzed
  #     with the osziloscope. For mor complicated OR and VETO trigger words this seems to have an effect.
  #TODO the code will most prob. have edge cases where it will break. 
  #  all veto seems to break an all do not care

    trigger_logic_1:
      trig_1: -1
      trig_2: -1
      trig_3: 1
      trig_4: -1
      trig_5: -1
      trig_6: -1

 #   trigger_logic_2:
 #     trig_1: 0
 #     trig_2: 0
 #     trig_3: 0
#      trig_4: 0
#      trig_5: 0
#      trig_6: 0

  trigger_polarity:
    #TLU triggers on rising (0) or falling (1) edge
    polarity: 1

  trigger_signal_shape:
    #Stretches and delays each trigger input signal for an number of clock cycles,
    #this could be important depending on the hardware trigger setup.
    stretch: [2, 2, 2, 2, 2, 2]
    delay:   [1, 1, 1, 1, 1, 1]

clock_lemo:
  enable_clock_lemo_output: True

pmt_control:
#PMT control voltages in V
  pmt_1: 0.8
  pmt_2: 0.8
  pmt_3: 0
  pmt_4: 0

#Save data and generate interpreted data from the raw data set. Set to 'True' or 'False'.
save_raw_data: True
interpret_data: True

#zmq connection leave it blank or set to 'off' if not needed
zmq_connection: "tcp://127.0.0.1:6500" # 'off'

